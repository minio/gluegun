server {
    rewrite_log on;

    # Comment this before going to production
    auth_basic "minio";
    auth_basic_user_file /etc/apache2/.htpasswd;

    root /var/www/html;

    # serve static files
    location ~ \.(jpg|jpeg|png|gif|ico|css|js)$ {
	expires 30d;
	break;
    }

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name gluegun.minio.io; # managed by Certbot

    error_page 404 /custom_404.html;
    location = /custom_404.html {
	root /var/www/html/404;
	internal;
    }

    location / {
	# break if URI has .html extension
	if ($request_filename ~* ^.+.html$) {
	    break;
	}

	# add .html to URI and serve file, directory, or symlink if it exists
	if (-e $request_filename.html) {
	    rewrite ^/(.*)$ /$1.html last;
	    break;
	}

	# First attempt to serve request as file, then fall back to displaying a 404.
	try_files $uri $uri/ =404;
    }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/gluegun.minio.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gluegun.minio.io/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = gluegun.minio.io) {
	return 301 https://$host$request_uri;
    }
    # managed by Certbot


    listen 80 ;
    listen [::]:80 ;
    server_name gluegun.minio.io;
    return 404; # managed by Certbot


}
